@page "/update/{AccountNumber}"

@inject IStoreRepository _repository;
@inject NavigationManager NavigationManager

<h3>Modify Account</h3>
<EditForm Model="AccountDetails" OnValidSubmit="SaveAccount">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>AccountNumber</label>
        <label class="form-control"><span>@AccountDetails.AccountNumber</span></label>    
    </div>
    <div class="form-group">
        <label>CustomerId</label>
        <label class="form-control"><span>@AccountDetails.CustomerId</span></label>
    </div>
    <div class="form-group">
        <label>AccountHolderName</label>
        <ValidationMessage For="@(()=>AccountDetails.AccountHolderName)" />
        <label class="form-control"><span>@AccountDetails.AccountHolderName</span></label>
    </div>
    <div class="form-group">
        <label>Balance</label>
        <ValidationMessage For="@(()=>AccountDetails.Balance)" />
        <InputNumber class="form-control" @bind-Value="AccountDetails.Balance" />
    </div>
    <div class="form-group">
        <label>Address</label>
        <ValidationMessage For="@(()=>AccountDetails.Address)" />
        <InputText class="form-control" @bind-Value="AccountDetails.Address" />
    </div>
    <div class="form-group">
        <label>MobileNumber</label>
        <ValidationMessage For="@(()=>AccountDetails.MobileNumber)" />
        <InputText class="form-control" @bind-Value="AccountDetails.MobileNumber" />
    </div>
    <div class="form-group">
        <label>TypeOfAccount</label>       
        <label class="form-control"><span>@AccountDetails.TypeOfAccount</span></label>
    </div>
    <button class="btn btn-primary" type="submit">Save</button>
</EditForm>


@code {
    [Parameter]
    public string AccountNumber { get; set; }

    public Account AccountDetails { get; set; }

   
    protected async override Task OnInitializedAsync()
    {
        AccountDetails = await _repository.GetAccountByNumber(Convert.ToInt32(AccountNumber));
    }


    public async Task SaveAccount()
    {
        await _repository.UpdateAccount(AccountDetails);
        NavigationManager.NavigateTo("/accounts");
    }

}
